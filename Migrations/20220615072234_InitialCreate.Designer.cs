// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PgJobs.Data;

#nullable disable

namespace PgJobs.Migrations
{
    [DbContext(typeof(JobDbContext))]
    [Migration("20220615072234_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PgJobs.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Failures")
                        .HasColumnType("integer")
                        .HasColumnName("failures");

                    b.Property<string>("Interval")
                        .HasColumnType("text")
                        .HasColumnName("interval");

                    b.Property<DateTime?>("LastDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_date");

                    b.Property<DateTime?>("NextDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("next_date");

                    b.Property<DateTime?>("ThisDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("this_date");

                    b.Property<string>("What")
                        .HasColumnType("text")
                        .HasColumnName("what");

                    b.HasKey("Id");

                    b.ToTable("jobs");
                });

            modelBuilder.Entity("PgJobs.Models.JobLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_end");

                    b.Property<string>("Error")
                        .HasColumnType("text")
                        .HasColumnName("err_txt");

                    b.Property<int>("JobId")
                        .HasColumnType("integer")
                        .HasColumnName("job_id");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_beg");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("jobs_logs");
                });

            modelBuilder.Entity("PgJobs.Models.JobLog", b =>
                {
                    b.HasOne("PgJobs.Models.Job", "Job")
                        .WithMany("Logs")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("PgJobs.Models.Job", b =>
                {
                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
